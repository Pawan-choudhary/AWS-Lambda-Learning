import boto3
import json
import os
 
# Initialize S3 client
s3_client = boto3.client('s3')
 
# Environment variable for bucket name
S3_BUCKET = os.environ['s3']
 
def generate_presigned_url(file_name, unique_key):
    """
    Generate a pre-signed URL for uploading a file to S3.
    """
    return s3_client.generate_presigned_url(
        'put_object',
        Params={'Bucket': S3_BUCKET, 'Key': unique_key},
        ExpiresIn=3600  # URL expiration in seconds
    )
 
def lambda_handler(event, context):
    """
    AWS Lambda function to handle API Gateway requests for generating pre-signed URLs.
    """
    print("Received event:", json.dumps(event))  # Log the entire event
 
    # Check if 'body-json' is in the event and parse it
    if 'body-json' in event:
        print("Processing POST request...")
        body = event['body-json']  # Access the body correctly as 'body-json'
        print("Body:", body)
 
        file_name = body.get('file_name')
        print("File Name:", file_name)
 
        if not file_name:
            print("Error: 'file_name' is required.")
            return {
                'statusCode': 400,
                'body': json.dumps({'message': "'file_name' is required."}),
                'headers': {'Content-Type': 'application/json'}
            }
 
        # Create unique S3 key (you can modify this to include user email or other metadata)
        unique_key = f"uploads/{file_name}"
        print("Unique Key:", unique_key)
 
        # Generate presigned URL for uploading
        presigned_url = generate_presigned_url(file_name, unique_key)
        print("Generated Presigned URL:", presigned_url)
 
        # Return the presigned URL
        return {
            'statusCode': 200,
            'body': json.dumps({
                'presigned_url': presigned_url
            }),
            'headers': {'Content-Type': 'application/json'}
        }
 
    # If 'body-json' is missing, return an error
    print("Error: 'body-json' is missing in the request")
    return {
        'statusCode': 400,
        'body': json.dumps({'message': "'body-json' is missing in the request."}),
        'headers': {'Content-Type': 'application/json'}
    }
